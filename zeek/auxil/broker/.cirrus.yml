cpus: &CPUS 8
memory: &MEMORY 6GB

config: &CONFIG --build-type=release --enable-static
memcheck_config: &MEMCHECK_CONFIG --build-type=debug --sanitizers=address

resources_template: &RESOURCES_TEMPLATE
  cpu: *CPUS
  memory: *MEMORY

macos_resources_template: &MACOS_RESOURCES_TEMPLATE
  env:
    BROKER_CI_CPUS: 12
    BROKER_CI_CONFIGURE_FLAGS: *CONFIG
    # No permission to write to default location of /broker
    CIRRUS_WORKING_DIR: /tmp/broker

branch_whitelist: &BRANCH_WHITELIST
  only_if: >
    $CIRRUS_PR != '' ||
    $CIRRUS_BRANCH == 'master' ||
    $CIRRUS_BRANCH =~ 'release/.*'

ci_template: &CI_TEMPLATE
  << : *BRANCH_WHITELIST
  sync_submodules_script: git submodule update --recursive --init
  build_script: ./ci/build.sh
  test_script: ./ci/test.sh

unix_env: &UNIX_ENV
  env:
    CIRRUS_WORKING_DIR: /broker
    BROKER_CI_CPUS: *CPUS
    BROKER_CI_CONFIGURE_FLAGS: *CONFIG

    # This is the key used to create HMAC auth keys for the benchmark script. This
    # was generated by creating a new key using openssl, and then running sha256
    # on it.
    BROKER_BENCHMARK_HMAC_KEY: ENCRYPTED[adc9a1b42cea5a92e0723e73cf38893546c5f217d42ad47dd688f768aa6bbf458661147dfa1e1545caaa5b58c80579ee]

    # This is the https endpoint host and port used for benchmarking. It's kept
    # encrypted as a security measure to avoid leaking the host's information.
    BROKER_BENCHMARK_HOST: ENCRYPTED[91d00f9b8e7423899232f7fc66769d6fb95fdb381b0e1546d5922483b060c853394f4146533fa4946809e8b2b97fb6d6]
    BROKER_BENCHMARK_PORT: ENCRYPTED[a22877e5c27b0957d7c7e78e2b1e1ea73ac02544544f453aee5af3bed2e90437a5b85cd2893bf6a741dfe22976c7ebb6]

# Linux EOL timelines: https://linuxlifecycle.com/
# Fedora (~13 months): https://fedoraproject.org/wiki/Fedora_Release_Life_Cycle

fedora34_task:
  container:
    # Fedora 34 EOL: Around May 2022
    dockerfile: ci/fedora-34/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

fedora33_task:
  container:
    # Fedora 33 EOL: Around November 2022
    dockerfile: ci/fedora-33/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

centosstream8_task:
  container:
    # Stream 8 support should be 5 years, so until 2024. but I cannot find a concrete timeline --cpk
    dockerfile: ci/centos-stream-8/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

centos8_task:
  container:
    # CentOS 8 EOL: May 31, 2029
    dockerfile: ci/centos-8/Dockerfile
    << : *RESOURCES_TEMPLATE
  env:
    BROKER_CI_CREATE_ARTIFACT: 1
  << : *CI_TEMPLATE
  << : *UNIX_ENV
  upload_binary_artifacts:
    path: build.tgz
  benchmark_script: ./ci/benchmark.sh

centos7_task:
  container:
    # CentOS 7 EOL: June 30, 2024
    dockerfile: ci/centos-7/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

debian11_task:
  container:
    # Debian 11 EOL: June 2026
    dockerfile: ci/debian-11/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

debian10_task:
  container:
    # Debian 10 EOL: June 2024
    dockerfile: ci/debian-10/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

debian9_task:
  container:
    # Debian 9 EOL: June 2022
    dockerfile: ci/debian-9/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

debian9_32bit_task:
  container:
    # Debian 9 EOL: June 2022
    dockerfile: ci/debian-9-32bit/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

opensuse_leap_15_2_task:
  container:
    # Opensuse Leap 15.2 EOL: Dec 2021
    dockerfile: ci/opensuse-leap-15.2/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

opensuse_leap_15_3_task:
  container:
    # Opensuse Leap 15.3 EOL: TBD
    dockerfile: ci/opensuse-leap-15.3/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

ubuntu20_task:
  container:
    # Ubuntu 20.04 EOL: April 2025
    dockerfile: ci/ubuntu-20.04/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

ubuntu18_task:
  container:
    # Ubuntu 18.04 EOL: April 2023
    dockerfile: ci/ubuntu-18.04/Dockerfile
    << : *RESOURCES_TEMPLATE
  << : *CI_TEMPLATE
  << : *UNIX_ENV

# Apple doesn't publish official long-term support timelines.
# We aim to support both the current and previous macOS release.
macos_big_sur_task:
  macos_instance:
    image: big-sur-base
  prepare_script: ./ci/macos/prepare.sh
  << : *CI_TEMPLATE
  << : *MACOS_RESOURCES_TEMPLATE

macos_catalina_task:
  macos_instance:
    image: catalina-base
  prepare_script: ./ci/macos/prepare.sh
  << : *CI_TEMPLATE
  << : *MACOS_RESOURCES_TEMPLATE

# FreeBSD EOL timelines: https://www.freebsd.org/security/security.html#sup
freebsd13_task:
  freebsd_instance:
    # FreeBSD 13 EOL: January 31, 2026
    image_family: freebsd-13-0
    cpu: 8
    # Not allowed to request less than 8GB for an 8 CPU FreeBSD VM.
    memory: 8GB
  prepare_script: ./ci/freebsd/prepare.sh
  << : *CI_TEMPLATE
  << : *UNIX_ENV

freebsd12_task:
  freebsd_instance:
    # FreeBSD 12 EOL: June 30, 2024
    image_family: freebsd-12-2
    cpu: 8
    # Not allowed to request less than 8GB for an 8 CPU FreeBSD VM.
    memory: 8GB
  prepare_script: ./ci/freebsd/prepare.sh
  << : *CI_TEMPLATE
  << : *UNIX_ENV

freebsd11_task:
  freebsd_instance:
    # FreeBSD 11 EOL: September 30, 2021
    image_family: freebsd-11-4
    cpu: 8
    # Not allowed to request less than 8GB for an 8 CPU FreeBSD VM.
    memory: 8GB
  prepare_script: ./ci/freebsd/prepare.sh
  << : *CI_TEMPLATE
  << : *UNIX_ENV

memcheck_task:
  container:
    # Just uses a recent/common distro to run memory error/leak checks.
    dockerfile: ci/ubuntu-18.04/Dockerfile
    cpu: 8
    # AddressSanitizer uses more memory than normal config.
    memory: 8GB
  << : *CI_TEMPLATE
  env:
    CIRRUS_WORKING_DIR: /broker
    BROKER_CI_CPUS: *CPUS
    BROKER_CI_CONFIGURE_FLAGS: *MEMCHECK_CONFIG
    BROKER_CI_MEMCHECK: true

windows_task:
  # The Windows task is currently disabled on Cirrus since it times out for
  # unknown reason (seems to hang during downloading/running the Docker image),
  # so Travis is used instead.
  only_if: false
  # 2 hour timeout just for potential of building Docker image taking a while
  timeout_in: 120m
  windows_container:
    # image: cirrusci/windowsservercore:cmake
    # image: zeekurity/broker-ci-windows:latest
    dockerfile: ci/windows/Dockerfile
    os_version: 2019
    cpu: 8
    # Not allowed to request less than 8GB for an 8 CPU Windows VM.
    memory: 8GB
  sync_submodules_script: git submodule update --recursive --init
  prepare_script: ci/windows/prepare.cmd
  build_script: ci/windows/build.cmd
  test_script: ci/windows/test.cmd
  env:
    BROKER_CI_CPUS: 8
